{"project": "hats", "project_url": "https://github.com/astronomy-commons/hats", "show_commit_url": "https://github.com/astronomy-commons/hats/commit", "hash_length": 8, "revision_to_hash": {"0": "75707d8d9990752ef01a997a5699f95c806da559", "9": "8488c6f097e6a13e6fe42e209bc7d1023e1bc7f8", "11": "6bd74733c0eebf9a2275f96fee79f64adc73133b", "13": "05bf21def8039b92607c5b09b393582fc7cca58b", "17": "99f94d7d5eec1c32f3a07fb6de761e822f78a4d8", "19": "220799b48ac3d5dc8c14df19fca3c5cc7a041704", "30": "a8680c7c3a1be6f46be60c0f361e185f5058b255", "33": "736c970b31ae615b3d1a525cc20ff20ca75870ee", "35": "e901d9e06416c3f8c1309a02e56072e1a2273f51", "39": "48fa46cfe084fe38ad9305b4ab48bb73fc96afa2", "41": "9a1184eeb50ca43e447f836711df458c79657823", "45": "b4e0a574e70af5b261dee09be48d95fc16686217", "47": "431c3856d0b8534a4df572b07519050dc4ea12bc", "54": "2083e591bd57e1a45cd9fb9d188dcd53742853fd", "57": "f40c10c346ed2a197f232c5e4f1d2469273c2053", "61": "a4613ad7d88a85c0162b71101f8bacea2e264501", "62": "9d50b6fdedca9c7b6d89fbd3d2c4add84c2dd6e8", "64": "38a881ac66a229733e499cefee3d77e4bec0c8d2", "70": "7138edf50f0838e3fbafc357ff63ed64bcd6d227", "73": "301b7e05b7be7e29824ef772efd0fc3255bffc92", "76": "bc458e0ff4991358e4a4a13bd78ee46bef930c8f", "80": "ee632fbcb662388cac2d8b1f97daa756eb917513", "81": "70b83ebdfc6501084ae9c516a2c87a9ef022d5c9", "84": "7476c6f4bc85c5ca260ff070512b74bd8108883e", "103": "7695246aa305ca6e1a98d66f16d470663df39f63", "109": "6eb5282c6b72d667db16e785ed7d4082f7b0aa8b", "116": "67ced7e33e1aa9bd27426b284c6c664734449bec", "117": "b61eb03056b8b412bfc86cce65f75557c1340997", "129": "780cbce20454fdfa8dd9a8e49ef46009dad279ad", "130": "c414d9205e1dfa3a2d29a0f0735c5a6cdcfa25ad", "136": "2ea0e91ce42fac9b021a61003f0076ac5d988d41", "138": "0beafa68fec6ba4b39faa2e8043078de7d6ca2ba", "141": "37a93cafa6be504093435d00293db62d116aa7fb", "142": "8f2e17b6d0045ecaf970317fc24d9b37881e22b3", "150": "65a32a76ac434d34755c02f535689c0792315757", "151": "517293c2b4ee07f0b90d5ab5bcd3071bf5d1a338", "152": "da2edd3b18fdb5e0c94e9a19aa816c10d7efa40d", "153": "9ccc585b130ce227af4825fac144ccb3eec3e4bf", "155": "d85bdaf666f55d6d806f9621d6a447c6e8576a28", "158": "6d27bf671da3bd0b54ac01422c38d307269a9eae", "164": "aa79cb43c76e9fd9ba96dabe92fa341d1080dd07", "165": "4158b160239603219d0a0b7fef233282fa1e4967", "173": "d8259445a6839050c5e3f91a4d93a48f7db34c79", "188": "cb99c5ae09d4338fad121af36f5672c39407e670", "192": "1cb33bd383d80d13aa164fed6874e6bf4050ebac", "194": "c890a21b766071c336412ef67fc051c1f93f6def", "198": "1f9fb156a8b7ac527d5cb3507571010e2141147c", "199": "09ebcb08c3098f5e337d503fdbd8321cbca3fa59", "205": "a5b5e447f06e834e1e5e61ce8dcb947cc27a714b", "208": "37026215f1adb8abe476757407f6b575f1ee3124", "216": "b61e88577412e678c59eb9d3d3a815d8adfae068", "217": "deecbdfa7b33538fb5931db21848251ae84b53a0", "220": "18c389d544d2508adba411ceeefebebdc1354d56", "232": "bdde9aacea98672c5cf47ac4e084a53e0360d1d9", "238": "816cadedcdf2b4aad73d28563c7b25ad059ddd5c", "245": "1df30af96cb66268f9b623d9a9e6fd64fa6fb744", "247": "0f958b0b7de07d7eccd2ac4c29ef5917b87f4c38", "248": "b0353a62463b7d2a14cbb62afd08c604887b1779", "253": "493f680a47e836e3db9afbb1e838290b8bf61aea", "255": "2852c247d3f70e0e912ea39d988ae295a9bb89ed", "259": "c388d4d6eee1ab3ac4565ae5c24157093b0c778d", "261": "acbbbae0dd711d8617d2d24b4cf69f0a7bc76fcf", "264": "4bfbfdadd5ae0eec0cb6d363e72f64beb723b74d", "266": "43f80a2b74fde4f6a9f2366329e68acb416fdca6", "280": "8a53dc8e739a799fa4d178d984e41809006db95d", "284": "e33790f34b532e52b7f6c8456956d0cac160761b", "285": "95d6cb210b000194816c7841717fd6d3d586433f", "288": "6c11c4b3094320fb8515edd97e7a469684df8878", "300": "293a76d8321f33d26b60aa6163fb0206935c793b", "306": "eb3a3dbd824a3ef406147d2b99e46fabecbd5882", "313": "550021fac00e2142f1053666b090b5f406a54137", "318": "6125aa8f062f6d247c4752ed99e1eb5a16cca626", "322": "20261fdc0f8c00322c50fa6f6b77391388e9aed0", "324": "c533211a9bf425c61b5c28519fa871f170b46e1e", "325": "2c4a9f1f70c30c14a9db59bc45859dee9d76b666", "330": "c2ec85c2d5e69a6b8c5d49bd8032240195208da6", "338": "1127da5b34c8c7d3a2dc100982b8fdf76e9ed253", "341": "dd0f29a70076c3174d64706bb7ef33debadb6a1b", "346": "efac666e2e1d6c1a674b9115ac982b8197a801ef", "347": "cc77f298432d20467a1db12be1c033ed33991b6d", "351": "f3390148d6fd5050845ecce085f991f73d757223", "353": "1c911ad51a8248d24ce35145d184d1c0efb413db", "355": "abe797f201c3c0f820c52035f5a9b45f152947d1", "357": "47e87a9440f29df231694994de93a98f7c4a8c4b", "362": "8f9b37443afa53ea31fb494e74aebb09afb3786a", "364": "2b52ff61ebee6fc7e24300f3ced15c3cca3a08b2", "371": "7a466afdfe1c5caa8ae0fe79cddcf6d66c877eaa", "376": "a95bb4da3e7317b81779e18e4bd45074711f89c5", "400": "afc165a6c984b1cdcb082e4b69e70e7b282d3c83", "408": "967569463a06d62268ba7ba406d17247e7acb489", "409": "423712ec643e735d163d4ce30a7123618b2ea7ad", "416": "f9abee555ca610a156ad8263f23a5d5a1466d721", "429": "4060450db8cacbb665bbb786d22c04f092a50a1e", "431": "2c906fdb321bc15cc26ceeb01b59852979a3eb04", "433": "da10c3a5d1f65bf9d6205b7b40378a27a5f452d7", "435": "0351780439e09936cf1a7e165528491f0320d6d1", "437": "5603b177193585f98db887d0c310d944d2ae8dbe", "448": "f811ab32bc679570f5e4151dce9c1cae82a16745", "454": "4d430cdec820b413954e94b7044ef77ec7259568", "455": "a15734c70ba6689122fd6dc0780f2b12ac2d836f", "457": "3c40234536fd524aae967c34a9410a7e300ffe3a", "466": "7a1e727d0db5f3929aef0d4fec012a1b68c39a7d", "467": "e6ac8e2869c119d5fffa4170f815ddda57c792b7", "471": "3bd039f5a07eae8b21e6bb8bdab242f3716552a3", "473": "8340e73d002621dfc0b0317c28272fe630d464bf", "476": "2ea33006e4ce4c656d16ab27c35c4e5e1ae15cd3", "478": "8a22c03e8ced3e66f6ad0e0d16137d1ba087e626", "480": "babea6c63872cd91cce733a145283198a5782983", "481": "9b53aeb0b70b73140736d7c0f29b3b1c6c2c423b", "493": "72dd5ba30fa96ca3acc0ad77f0e21e0653ea2593", "494": "5edcb7447178e17e28b2306301a651b1ae288759", "495": "430aee3395deee3971fcbb0cc8df987a0a721bda", "496": "dcef99b6e296db40479099e421ae432a4fa59f5d", "499": "cdccc6850077e77391c193af9d8085194d06f7c4", "504": "e5b8bf3c1fd2e4a9f1f171d7a25923225871e43f", "506": "0c42a6065c28a9dccdf9681fb5b0add35d65b2a8", "507": "11a8182b58549c8a14178b0a9a38fe65a1413c7e", "508": "5942afa9e52e49697c64d8c080ecfdf9d2c3dda5", "512": "b4fa8fdb15e5bc24f70024f857d246a47e405de3", "517": "a313710a710488d26cb0ab5e7eb23e61bda8e695", "518": "435e4d5c390938edd0502ffdbcbb5fd018674fca", "521": "247c9a995d6dbcc74f8f504110669694e5ac7492", "522": "776e9a6a55043cf2ba9a321a90c6fc850a192b2f", "523": "62b12861ddba5a437e067b0ac2f37e8b0aab0c0a", "528": "50c6e8054e47aa74f5cbd9e41e57b6d6571de647", "529": "31f438a199486c2d0866e070df2a142113ae7b6d", "530": "a53ce844cccc8bcc965f9625f1d4046932965aee", "531": "7a25cde192a41e952efca8318d780a797080182d", "532": "6574ad25bc69aab2f019b1d2e2a902a6152465ce", "536": "d001db3cf6d0e834c1a6acb4a469b4078cb1603f", "538": "3358fbc8e0b794ca82628d84c76d437b1b68c1a6", "544": "ffa835284315e046ae33a91c5d432b841e0addf5", "550": "3a77c014a8ea4454137111df67f1c363eb688010", "557": "22467ac2d81b5711d5aa8efc348c7171ec8b621b", "558": "fb575dd711d62dda5cbe50703d198c64de934070", "564": "4e253a5cabc3fd4ba834ca69a832a0432970a7fa", "565": "316ff46f4ece0dc7acc733031996c62cda7685ac", "566": "f6146ac235a40666efbdd2934050bcbdd0e2a8de", "567": "c2e8bfd83fe4ed54a123d43f92ab06b452d0d8b3", "568": "684cd83c9757f6ad8729ab799ea2fa4c5ef2e86c", "570": "745f38b1bed66a77061504fa53d73381ebbc3d21", "571": "ae1e1c1fcc77b0fa3c9cfc70913a4175ac88784d", "572": "1572b548c903b8889ff63a2aa9fb223c3595237c", "578": "cb38ea3443834f542472ad8dd8f1b43c143dc3bb", "581": "a051d36d7351f336955196474094e31ba0b1119d", "582": "d13e8e78dd8ed2bb8601986f76c440cb1b1d8aa0", "583": "18c8d2aec5dcbf2697917428151021c4022e2967", "584": "63fcc071e1319f18a4470ce65f541fa07db852ee", "585": "5cb2edbad5d7eb551f8b53f12de893c719a25045", "587": "29fb459e887d47798ba7de0b15727858d79e45d6", "590": "de8670531ef232f7fb018b57c843f36a624fd22c", "593": "062e36330c7468082d41f241b45195826f16c63a", "598": "b1bab76470782da76d45995f77fcf519e4de87b4", "599": "d2a4d0a606d2db670cf76d9085bc45423cd5405f", "600": "85ec4a0af94265b287d577b22384408311905ec6", "601": "147378fc404c7bb740bdda5cf33b1c040d937bd7", "602": "09821aa70de04ef3cc365607d7be01c93adea222", "603": "8b1fb86cdfeefe0b6ebc5e5fcbd275895f432b49", "604": "2f9fceda000c0b72a8961da85f47c89b251f9cb6", "605": "2cf6d1ce9fa623d110f34117b638a2dddd329799", "607": "ece81e4f36967af38588f3310c565b4930fd057b", "609": "014342d24d73190bad391c29da47bac16c8afb59", "610": "3b14c221cbca83fa306ee66580a659d5524e53dd", "613": "deffbb2f493b18b2c763ce712a6c1b26e044fd38", "614": "bf275bcc350570b927c5a8f14fc8e01cc4cc32d5", "626": "46c02bbfab68d5b29a583f76222e7ba343035c4d", "628": "ed95d6d6b5b07d903bbbe2b475c66079e94b01cd", "634": "6dd694eba5d08e191b5901a19d2de399f074f2e0", "637": "48ce3920b1f47b8f40438ff4697045d67b7cd616", "638": "4a31558e5bd7d97839b20077eb32fe77133c6617", "651": "e7b8f4ca3fbcbcb39074bcc291bc66a255610c15", "653": "4a1d213bb33facd55a3d1f4fe46748ef43990946", "654": "10e527db4e594fa3e8232473857a971a0aa427f0", "657": "af5806af68f6621c7d7c3b5a94aa61e705c98967", "661": "99bd6ca4e608cf190b16c7a764e38cafa4de07c9", "668": "8fefec9f1f492f23572d0623cd100f05a394a32c", "669": "7e27775a478d7f2203adfb44e33265e2257eb721", "673": "f4a4166ae46d997c4715cb91b6de9a7e7e19631f", "675": "5bcb47035cca6fac66a052db053505f8a8874500", "677": "67b4f8ece571c49370ebdc3ca5c879d34fb37460", "679": "005d780d94047d2bff0dc217b9a7d5ce7f6e3a79", "680": "5e04e4e9bbbd48d6154eb6c29ce8e5c30816e23f", "688": "5a11092463d05af1a4d0a57d10952e10ce483fda", "691": "943e4263a452b3d2002aa36c72ece45c7a3072b3", "695": "9d7dfddc257b4e666caf324ba94ee291de147678", "696": "1ebbbfe47ff99369f6d5c65d4c65a5fc3c7a4bed", "697": "5fdc4f661f0c72571a5af9550f0c382886347493", "709": "98de4020fc4bb85602ed4109ce783cfa74920390", "711": "ace187d95759867b9ea90ce9d04b6d4220112679", "712": "251c13d0477786780b639d778f45be5d650f620b", "713": "d57f59c316b97e0792918636c278417731f5d9c3", "717": "696db00fe5818412c5316fcdbb57a65f93bd1461", "718": "6d427ac545c2db582f6ccd216354cc8356683729", "719": "b82911556a564c85cbe9eb6372545ba258470e62", "720": "a7338cab00523a22fd3a40b04468a916058b162b", "721": "7b376161f4fe5f8fe32c6bf930b6a8faeadfd3bc", "725": "20eee15e4ec1f2bd0a9632e3c4b34b75f20b43eb", "726": "f9154e882c3cb4edbab47719e8200c2b956620d8", "727": "3e1797ce79e2259b0832ddc58eb9e82662cd945d", "732": "97643b635090472bfc10adef904dbcb53103f327", "734": "c081ede1fe793a68b2160e61c84190842aa45dc1", "735": "98b4ba904d1a3bd1ab9c79d9b78717b895c02c7e", "736": "621587362b2e93d56e7e641c6cccac41d78c474a", "737": "b02ac54d9ef70b997bf49fdb251d341ef55ee5c2", "738": "96fa40bb9372d484781b0bf59aa1c57bc6660169", "739": "047600e667191af000337b446f7c24fd37a6b0eb", "744": "2c625cea2c0c4451e99f3b0e1b38f74f723b11c5", "745": "3234fcf2a8bab344e8c092f2b629b4f4686dd975", "746": "8db18931d1bb171482cd23c23d55668258f76a5e", "749": "04596506011ec5f021ebe612dcf7f5e8e9044795", "750": "8139cbc5c1c36afad305db0677bdb63da0a57e34", "751": "23e7ee3ec1b1ac3d7b92d4a26b035ebc97b2aa1c", "754": "6578a3e3b63ef24d8156aac06ef62e2bc3df3f43", "755": "2a7ea9e270b495b67b1be5cd05549e7695f12db3", "756": "a5f7399f0c3c81d89178e0dde0c2f8f594438c3e", "757": "23ae2eeeff302dca5d57efe56ff221f03b70549f", "758": "efb34b659ee0679bacec6b4fff09f002b81a1367", "759": "4357f0c96eb4cea48ffb5f970daaa9e074d46ac7", "760": "fba08e72ee16a6acef8942146d01d928d1017e18", "763": "f6d84a81565b4e2c04c91348180cdc6bd2efc118", "767": "ffae4452f84d0ddc3a8eb124843a8e59542c5b2b", "769": "0e5b0347af26f004564ce28d4572ea4e6b42cea5", "770": "632292a0a60f8ddeb89f41237e04fdff9ae16ab3", "771": "94ef0335642fb21c30f29b1da3fb894c47e46e6a", "772": "cfffa75e80d4358f1a8cebc006707a1ad48ad583", "773": "cd18fe36a4ede25a65b4481f17a862802865464d", "774": "fc05f667be92d5923b8284524f5a21022c5c08e6", "775": "499c66aa5db1d9f1b8bd10e3a2741b1f0e673e10", "776": "16284570a8fb4197342383e63b442d3389e1f10f", "801": "4ef9952b20d72d5717f0b3161a99ccc212783930", "802": "d211684c8f11c4c0d7f0229016ef0059b0894031", "803": "f2704b837a0759109f0e49ac743089c4f7bfd453", "804": "1710fd703b6002bd0c82d5110425265fb2e9349a", "807": "db910af7605c5e17b57140f2d72930d8f0c041a0", "808": "7783fbf8861f0e27d709b84cf48d6be405e2890d", "809": "8e1d45657a493bcad6f42da769b6ca33d70b86f0", "810": "bccf40c583936b0e8a4098dfd526ed57f86322c9", "811": "c57717f83e6303e3a560c081075db1e950080f3b", "817": "f7789662ee2e5ebc370a1a4ed138b9e78377dd16", "822": "17ec4acd5f644156c21ab30ac6868da168bec84e", "823": "21ac0506d409ff61f0bf029a71a26efaa64f2b0b", "824": "e47eab168bdc5418a73b855c0b2872dfeeedc633", "825": "c27133d99f9486286ee671ec1b9e403fd8402f3b", "826": "635816fedf109b5ecf04f3e112fe2742b2202df4", "827": "c39621d6186b4c47df3d2736592bc9684db5c756", "828": "ad6efa0403e7ea279ff6a3faef16a1ad33014341", "829": "834c06086520ee2568dc68421c263cc1d2b6b934", "830": "8a95897b65a385a129bf37d3640a56c241fd0866", "831": "e607278e477c097e5749eaf0cc967346145fdca6", "832": "56321ef8746863302ba0dcebd561c1a94c96fb34", "833": "081961abb2ece87e1ffaefff2bfabdfccab6a581", "834": "cca790d9efe24ae54da7d5f24e7cc92ac76de656", "835": "e3d899a0ca792a8471c271258cb716238a8c63a5", "837": "f21c1fb9d3e422890812e9e4e61a0249f469bbd2"}, "revision_to_date": {"0": 1673274370000, "9": 1674055747000, "11": 1675101619000, "13": 1675112315000, "17": 1675194773000, "19": 1675367384000, "30": 1675702758000, "33": 1675706444000, "35": 1675708062000, "39": 1675715691000, "41": 1675779956000, "45": 1675799597000, "47": 1675800185000, "54": 1675816167000, "57": 1675889311000, "61": 1676040983000, "62": 1676041844000, "64": 1676311332000, "70": 1676570410000, "73": 1677246821000, "76": 1677609809000, "80": 1677681689000, "81": 1677848936000, "84": 1677860870000, "103": 1678730989000, "109": 1679068431000, "116": 1679326195000, "117": 1679337359000, "129": 1679424193000, "130": 1679499392000, "136": 1679581972000, "138": 1679586639000, "141": 1679670194000, "142": 1679678035000, "150": 1680007530000, "151": 1680028901000, "152": 1680098144000, "153": 1680109242000, "155": 1680292343000, "158": 1680902918000, "164": 1681227242000, "165": 1681234027000, "173": 1681240202000, "188": 1681319094000, "192": 1681331929000, "194": 1681336756000, "198": 1681411757000, "199": 1681411793000, "205": 1681752637000, "208": 1681836142000, "216": 1681846497000, "217": 1681852609000, "220": 1682009213000, "232": 1682364840000, "238": 1682528996000, "245": 1685533765000, "247": 1685555616000, "248": 1685560235000, "253": 1685646487000, "255": 1685728690000, "259": 1685972195000, "261": 1686057909000, "264": 1686096828000, "266": 1686170689000, "280": 1687279542000, "284": 1687373753000, "285": 1687477898000, "288": 1688151361000, "300": 1689094987000, "306": 1689181731000, "313": 1689359158000, "318": 1689631432000, "322": 1689871805000, "324": 1690314443000, "325": 1690402403000, "330": 1690486575000, "338": 1690917804000, "341": 1691412150000, "346": 1691436192000, "347": 1691529518000, "351": 1691762378000, "353": 1691764417000, "355": 1691767398000, "357": 1692220593000, "362": 1693418904000, "364": 1693422139000, "371": 1693497861000, "376": 1694699725000, "400": 1695221712000, "408": 1695834518000, "409": 1695835707000, "416": 1695931198000, "429": 1696424891000, "431": 1696445986000, "433": 1696528723000, "435": 1697028089000, "437": 1697033087000, "448": 1697132613000, "454": 1697484010000, "455": 1697646440000, "457": 1697722445000, "466": 1698152231000, "467": 1698174448000, "471": 1698256406000, "473": 1698855827000, "476": 1698943284000, "478": 1699289617000, "480": 1699889398000, "481": 1699898566000, "493": 1700511310000, "494": 1700589274000, "495": 1700684732000, "496": 1701097649000, "499": 1701192465000, "504": 1701434652000, "506": 1701467226000, "507": 1701708823000, "508": 1701718449000, "512": 1701987828000, "517": 1702062536000, "518": 1702067853000, "521": 1702497579000, "522": 1702497822000, "523": 1702909955000, "528": 1703261064000, "529": 1704375100000, "530": 1704902662000, "531": 1704907811000, "532": 1704910151000, "536": 1705428143000, "538": 1705587732000, "544": 1706296009000, "550": 1706656299000, "557": 1706723849000, "558": 1706803426000, "564": 1707230016000, "565": 1707326060000, "566": 1707338489000, "567": 1707401412000, "568": 1707501850000, "570": 1707843417000, "571": 1708004477000, "572": 1708033125000, "578": 1708115465000, "581": 1708353939000, "582": 1708698723000, "583": 1708711721000, "584": 1708964591000, "585": 1708973884000, "587": 1709137986000, "590": 1709143523000, "593": 1709158666000, "598": 1709312988000, "599": 1709317202000, "600": 1709323407000, "601": 1709926021000, "602": 1709927289000, "603": 1710168551000, "604": 1710173763000, "605": 1710270755000, "607": 1710273099000, "609": 1710453748000, "610": 1710856095000, "613": 1710962339000, "614": 1711034607000, "626": 1711541813000, "628": 1712062780000, "634": 1712251497000, "637": 1712252270000, "638": 1712252779000, "651": 1712858741000, "653": 1712863675000, "654": 1712864328000, "657": 1712951644000, "661": 1713373719000, "668": 1713387652000, "669": 1713610175000, "673": 1714564303000, "675": 1714584922000, "677": 1714598787000, "679": 1714675772000, "680": 1714763247000, "688": 1715186696000, "691": 1715196443000, "695": 1715635344000, "696": 1716310934000, "697": 1716312556000, "709": 1716582371000, "711": 1716904416000, "712": 1716993472000, "713": 1717168746000, "717": 1717507460000, "718": 1717699601000, "719": 1718043434000, "720": 1718052056000, "721": 1718114583000, "725": 1718210755000, "726": 1718220018000, "727": 1718639495000, "732": 1719000101000, "734": 1720826684000, "735": 1721058074000, "736": 1721058090000, "737": 1721329153000, "738": 1721412874000, "739": 1721661030000, "744": 1721931051000, "745": 1722016076000, "746": 1722026178000, "749": 1722429827000, "750": 1723592522000, "751": 1723639545000, "754": 1724357254000, "755": 1725370604000, "756": 1726146328000, "757": 1726156432000, "758": 1726243224000, "759": 1726499494000, "760": 1729087283000, "763": 1729173334000, "767": 1729177797000, "769": 1729178583000, "770": 1729183606000, "771": 1729284782000, "772": 1729606385000, "773": 1729622364000, "774": 1729623544000, "775": 1729686726000, "776": 1729706601000, "801": 1729871739000, "802": 1729878040000, "803": 1729878070000, "804": 1730119698000, "807": 1730224350000, "808": 1730394149000, "809": 1730398100000, "810": 1730473652000, "811": 1730483781000, "817": 1730495104000, "822": 1730496550000, "823": 1731596006000, "824": 1731596326000, "825": 1731602039000, "826": 1732206690000, "827": 1732212574000, "828": 1732654471000, "829": 1733146785000, "830": 1733146800000, "831": 1733146837000, "832": 1733170711000, "833": 1733322170000, "834": 1733436760000, "835": 1733511311000, "837": 1733767218000}, "params": {"machine": ["gh-runner"], "python": ["3.10", "3.11"], "Cython": [""], "build": [""], "packaging": [""], "branch": ["HEAD"]}, "graph_param_list": [{"machine": "gh-runner", "python": "3.11", "Cython": "", "build": "", "packaging": "", "branch": "HEAD"}, {"machine": "gh-runner", "python": "3.10", "Cython": "", "build": "", "packaging": "", "branch": "HEAD"}], "benchmarks": {"benchmarks.MetadataSuite.time_load_partition_info_order6": {"code": "class MetadataSuite:\n    def time_load_partition_info_order6(self, cache):\n        PartitionInfo.read_from_dir(cache[1])\n\n    def setup_cache(self):\n        root_dir = os.getcwd()\n    \n        ## Create partition info for catalog a (only at order 7)\n        pixel_list_a = [HealpixPixel(7, pixel) for pixel in np.arange(100_000)]\n        catalog_path_a = os.path.join(root_dir, \"catalog_a\")\n        os.makedirs(catalog_path_a, exist_ok=True)\n        partition_info = PartitionInfo.from_healpix(pixel_list_a)\n        partition_info.write_to_file(os.path.join(catalog_path_a, \"partition_info.csv\"))\n    \n        ## Create partition info for catalog a (only at order 6)\n        pixel_list_b = [HealpixPixel(6, pixel) for pixel in np.arange(25_000)]\n        catalog_path_b = os.path.join(root_dir, \"catalog_b\")\n        os.makedirs(catalog_path_b, exist_ok=True)\n        partition_info = PartitionInfo.from_healpix(pixel_list_b)\n        partition_info.write_to_file(os.path.join(catalog_path_b, \"partition_info.csv\"))\n    \n        ## Fake an association table between the two\n        tree_a = PixelTree.from_healpix(pixel_list_a)\n        tree_b = PixelTree.from_healpix(pixel_list_b)\n        alignment = align_trees(tree_a, tree_b)\n        alignment_df = alignment.pixel_mapping[\n            [\n                PixelAlignment.PRIMARY_ORDER_COLUMN_NAME,\n                PixelAlignment.PRIMARY_PIXEL_COLUMN_NAME,\n                PixelAlignment.JOIN_ORDER_COLUMN_NAME,\n                PixelAlignment.JOIN_PIXEL_COLUMN_NAME,\n            ]\n        ]\n        alignment_df = alignment_df.rename(\n            columns={\n                PixelAlignment.PRIMARY_ORDER_COLUMN_NAME: \"Norder\",\n                PixelAlignment.PRIMARY_PIXEL_COLUMN_NAME: \"Npix\",\n            }\n        )\n    \n        association_catalog_path = os.path.join(root_dir, \"assocation_a_b\")\n        os.makedirs(association_catalog_path, exist_ok=True)\n        partition_info = PartitionJoinInfo(alignment_df)\n        partition_info.write_to_csv(association_catalog_path)\n    \n        return (catalog_path_a, catalog_path_b, association_catalog_path)", "min_run_count": 2, "name": "benchmarks.MetadataSuite.time_load_partition_info_order6", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:72", "type": "time", "unit": "seconds", "version": "e431b00caf270712fec98bcb3b4b887c36579beca1a9d9cdfbd9571287b975a9", "warmup_time": -1}, "benchmarks.MetadataSuite.time_load_partition_info_order7": {"code": "class MetadataSuite:\n    def time_load_partition_info_order7(self, cache):\n        PartitionInfo.read_from_dir(cache[0])\n\n    def setup_cache(self):\n        root_dir = os.getcwd()\n    \n        ## Create partition info for catalog a (only at order 7)\n        pixel_list_a = [HealpixPixel(7, pixel) for pixel in np.arange(100_000)]\n        catalog_path_a = os.path.join(root_dir, \"catalog_a\")\n        os.makedirs(catalog_path_a, exist_ok=True)\n        partition_info = PartitionInfo.from_healpix(pixel_list_a)\n        partition_info.write_to_file(os.path.join(catalog_path_a, \"partition_info.csv\"))\n    \n        ## Create partition info for catalog a (only at order 6)\n        pixel_list_b = [HealpixPixel(6, pixel) for pixel in np.arange(25_000)]\n        catalog_path_b = os.path.join(root_dir, \"catalog_b\")\n        os.makedirs(catalog_path_b, exist_ok=True)\n        partition_info = PartitionInfo.from_healpix(pixel_list_b)\n        partition_info.write_to_file(os.path.join(catalog_path_b, \"partition_info.csv\"))\n    \n        ## Fake an association table between the two\n        tree_a = PixelTree.from_healpix(pixel_list_a)\n        tree_b = PixelTree.from_healpix(pixel_list_b)\n        alignment = align_trees(tree_a, tree_b)\n        alignment_df = alignment.pixel_mapping[\n            [\n                PixelAlignment.PRIMARY_ORDER_COLUMN_NAME,\n                PixelAlignment.PRIMARY_PIXEL_COLUMN_NAME,\n                PixelAlignment.JOIN_ORDER_COLUMN_NAME,\n                PixelAlignment.JOIN_PIXEL_COLUMN_NAME,\n            ]\n        ]\n        alignment_df = alignment_df.rename(\n            columns={\n                PixelAlignment.PRIMARY_ORDER_COLUMN_NAME: \"Norder\",\n                PixelAlignment.PRIMARY_PIXEL_COLUMN_NAME: \"Npix\",\n            }\n        )\n    \n        association_catalog_path = os.path.join(root_dir, \"assocation_a_b\")\n        os.makedirs(association_catalog_path, exist_ok=True)\n        partition_info = PartitionJoinInfo(alignment_df)\n        partition_info.write_to_csv(association_catalog_path)\n    \n        return (catalog_path_a, catalog_path_b, association_catalog_path)", "min_run_count": 2, "name": "benchmarks.MetadataSuite.time_load_partition_info_order7", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:72", "type": "time", "unit": "seconds", "version": "11e7edc14a82f8c063938abf0cca705b6ececf3f9613d27d104ca724895f7c63", "warmup_time": -1}, "benchmarks.MetadataSuite.time_load_partition_join_info": {"code": "class MetadataSuite:\n    def time_load_partition_join_info(self, cache):\n        PartitionInfo.read_from_dir(cache[2])\n\n    def setup_cache(self):\n        root_dir = os.getcwd()\n    \n        ## Create partition info for catalog a (only at order 7)\n        pixel_list_a = [HealpixPixel(7, pixel) for pixel in np.arange(100_000)]\n        catalog_path_a = os.path.join(root_dir, \"catalog_a\")\n        os.makedirs(catalog_path_a, exist_ok=True)\n        partition_info = PartitionInfo.from_healpix(pixel_list_a)\n        partition_info.write_to_file(os.path.join(catalog_path_a, \"partition_info.csv\"))\n    \n        ## Create partition info for catalog a (only at order 6)\n        pixel_list_b = [HealpixPixel(6, pixel) for pixel in np.arange(25_000)]\n        catalog_path_b = os.path.join(root_dir, \"catalog_b\")\n        os.makedirs(catalog_path_b, exist_ok=True)\n        partition_info = PartitionInfo.from_healpix(pixel_list_b)\n        partition_info.write_to_file(os.path.join(catalog_path_b, \"partition_info.csv\"))\n    \n        ## Fake an association table between the two\n        tree_a = PixelTree.from_healpix(pixel_list_a)\n        tree_b = PixelTree.from_healpix(pixel_list_b)\n        alignment = align_trees(tree_a, tree_b)\n        alignment_df = alignment.pixel_mapping[\n            [\n                PixelAlignment.PRIMARY_ORDER_COLUMN_NAME,\n                PixelAlignment.PRIMARY_PIXEL_COLUMN_NAME,\n                PixelAlignment.JOIN_ORDER_COLUMN_NAME,\n                PixelAlignment.JOIN_PIXEL_COLUMN_NAME,\n            ]\n        ]\n        alignment_df = alignment_df.rename(\n            columns={\n                PixelAlignment.PRIMARY_ORDER_COLUMN_NAME: \"Norder\",\n                PixelAlignment.PRIMARY_PIXEL_COLUMN_NAME: \"Npix\",\n            }\n        )\n    \n        association_catalog_path = os.path.join(root_dir, \"assocation_a_b\")\n        os.makedirs(association_catalog_path, exist_ok=True)\n        partition_info = PartitionJoinInfo(alignment_df)\n        partition_info.write_to_csv(association_catalog_path)\n    \n        return (catalog_path_a, catalog_path_b, association_catalog_path)", "min_run_count": 2, "name": "benchmarks.MetadataSuite.time_load_partition_join_info", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "benchmarks:72", "type": "time", "unit": "seconds", "version": "c769403a57ec6b1a91c60ffcb9686bf1549195bc2329138d8d69e193dc6a57fd", "warmup_time": -1}, "benchmarks.Suite.time_inner_pixel_alignment": {"code": "class Suite:\n    def time_inner_pixel_alignment(self):\n        align_trees(self.pixel_tree_1, self.pixel_tree_2)\n\n    def setup(self):\n        self.pixel_list = [HealpixPixel(8, pixel) for pixel in np.arange(100000)]\n        self.pixel_tree_1 = PixelTree.from_healpix(self.pixel_list)\n        self.pixel_tree_2 = PixelTree.from_healpix(\n            [HealpixPixel(9, pixel) for pixel in np.arange(0, 400000, 4)]\n        )", "min_run_count": 2, "name": "benchmarks.Suite.time_inner_pixel_alignment", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "431c5363f39da36f5e31e36d66778137e224f54fb639625a51f62cb4c21d0a44", "warmup_time": -1}, "benchmarks.Suite.time_outer_pixel_alignment": {"code": "class Suite:\n    def time_outer_pixel_alignment(self):\n        align_trees(self.pixel_tree_1, self.pixel_tree_2, alignment_type=\"outer\")\n\n    def setup(self):\n        self.pixel_list = [HealpixPixel(8, pixel) for pixel in np.arange(100000)]\n        self.pixel_tree_1 = PixelTree.from_healpix(self.pixel_list)\n        self.pixel_tree_2 = PixelTree.from_healpix(\n            [HealpixPixel(9, pixel) for pixel in np.arange(0, 400000, 4)]\n        )", "min_run_count": 2, "name": "benchmarks.Suite.time_outer_pixel_alignment", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "dcc2b55115eedf5805bcb52c36ae0f1f9d3b837e7513b05408ecbc0197b37617", "warmup_time": -1}, "benchmarks.Suite.time_pixel_tree_creation": {"code": "class Suite:\n    def time_pixel_tree_creation(self):\n        PixelTree.from_healpix(self.pixel_list)\n\n    def setup(self):\n        self.pixel_list = [HealpixPixel(8, pixel) for pixel in np.arange(100000)]\n        self.pixel_tree_1 = PixelTree.from_healpix(self.pixel_list)\n        self.pixel_tree_2 = PixelTree.from_healpix(\n            [HealpixPixel(9, pixel) for pixel in np.arange(0, 400000, 4)]\n        )", "min_run_count": 2, "name": "benchmarks.Suite.time_pixel_tree_creation", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "76c0cb3b7af2250f83e1c2776004130b91d1ce71867e9fcff69c89068bf13bf9", "warmup_time": -1}, "benchmarks.time_test_alignment_even_sky": {"code": "def time_test_alignment_even_sky():\n    \"\"\"Create alignment from an even distribution at order 7\"\"\"\n    initial_histogram = np.full(hp.order2npix(7), 40)\n    result = hist.generate_alignment(initial_histogram, highest_order=7, threshold=1_000)\n    # everything maps to order 5, given the density\n    for mapping in result:\n        assert mapping[0] == 5", "min_run_count": 2, "name": "benchmarks.time_test_alignment_even_sky", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "c4d4cd79963d85a8084022a7439520a28a2bd2b3f63e581aeb1604b2d4f3d2ac", "warmup_time": -1}, "benchmarks.time_test_cone_filter_multiple_order": {"code": "def time_test_cone_filter_multiple_order():\n    \"\"\"Create a catalog cone filter where we have multiple orders in the catalog\"\"\"\n    catalog_info = TableProperties(\n        **{\n            \"catalog_name\": \"test_name\",\n            \"catalog_type\": \"object\",\n            \"total_rows\": 10,\n            \"ra_column\": \"ra\",\n            \"dec_column\": \"dec\",\n        }\n    )\n    pixels = [HealpixPixel(6, 30), HealpixPixel(7, 124), HealpixPixel(7, 5000)]\n    catalog = Catalog(catalog_info, pixels)\n    filtered_catalog = catalog.filter_by_cone(47.1, 6, 30 * 3600)\n    assert filtered_catalog.get_healpix_pixels() == [HealpixPixel(6, 30), HealpixPixel(7, 124)]", "min_run_count": 2, "name": "benchmarks.time_test_cone_filter_multiple_order", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "ada9f87a0abf9c0a0b0f512158bb21251f2577b5cf4a131246b2b3c4c1e67a2e", "warmup_time": -1}}, "machines": {"gh-runner": {"machine": "gh-runner", "version": 1}}, "tags": {"0.0.2": 35, "0.0.4": 62, "v0.0.10": 217, "v0.0.11": 238, "v0.0.12": 264, "v0.0.13": 306, "v0.0.14": 306, "v0.0.3": 54, "v0.0.5": 103, "v0.0.6": 138, "v0.0.7": 150, "v0.0.8": 153, "v0.0.9": 199, "v0.1": 306, "v0.1.1": 330, "v0.1.2": 355, "v0.1.3": 364, "v0.1.4": 431, "v0.1.5": 476, "v0.1.6": 495, "v0.1.7": 506, "v0.1.8": 508, "v0.2.0": 522, "v0.2.1": 529, "v0.2.10": 638, "v0.2.2": 538, "v0.2.3": 544, "v0.2.4": 564, "v0.2.5": 572, "v0.2.6": 585, "v0.2.7": 602, "v0.2.8": 607, "v0.2.9": 614, "v0.3.0": 669, "v0.3.1": 688, "v0.3.2": 695, "v0.3.3": 697, "v0.3.4": 713, "v0.3.5": 726, "v0.3.6": 736, "v0.3.7": 739, "v0.3.8": 749, "v0.3.9": 754, "v0.4.0": 760, "v0.4.1": 770, "v0.4.2": 807, "v0.4.3": 822, "v0.4.4": 828, "v0.4.5": 835}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}